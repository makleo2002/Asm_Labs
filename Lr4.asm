DATA SEGMENT

STRING DB 80,?,80 DUP(?)

DATA ENDS


CODE SEGMENT


ASSUME DS:DATA,CS:CODE

START:



MOV AX,DATA
MOV DS,AX



MOV DX,OFFSET STRING
MOV AH,0Ah
INT 21h



MOV BX,DX
INC BX
MOV CL,[BX]
XOR CH,CH
PUSH CX

UPPER:

INC BX
MOV AL,[BX]




CMP AL,'a'
JB DONT_CHANGE
CMP AL,'z'
JA DONT_CHANGE

ADD AL,'A'-'a'
MOV [BX],AL

DONT_CHANGE:

LOOP UPPER


POP CX
MOV BX,OFFSET STRING
MOV SI,2

PRINT_LOOP:

MOV AH,02h
MOV DX,[BX][SI]
INT 21h
INC SI
LOOP PRINT_LOOP

MOV AX,4C00h
INT 21h

CODE ENDS



STACK SEGMENT STACK

DB 256 DUP(0)

STACK ENDS

END START
